diff --git a/build/config/android/BUILD.gn b/build/config/android/BUILD.gn
index 4fc5565e2..c48c53536 100644
--- a/build/config/android/BUILD.gn
+++ b/build/config/android/BUILD.gn
@@ -41,12 +41,18 @@ config("compiler") {
   }
 
   ldflags = [
+    # Don't allow visible symbols from libgcc or libc++ to be
+    # re-exported.
+    "-Wl,--exclude-libs=libgcc.a",
+
     # Don't allow visible symbols from libraries that contain
     # assembly code with symbols that aren't hidden properly.
     # http://crbug.com/448386
     "-Wl,--exclude-libs=libvpx_assembly_arm.a",
   ]
 
+  # TODO(crbug.com/1184398): Move to compiler-rt when we are ready.
+  ldflags += [ "--rtlib=libgcc" ]
   if (current_cpu == "arm64") {
     if (arm_control_flow_integrity == "standard") {
       cflags += [ "-mbranch-protection=standard" ]
@@ -55,10 +61,6 @@ config("compiler") {
     }
   }
 
-  # Instead of using an unwind lib from the toolchain,
-  # buildtools/third_party/libunwind will be built and used directly.
-  ldflags += [ "--unwindlib=none" ]
-
   # $compile_api_level corresponds to the API level used for the sysroot path
   # calculation in //build/config/android/config.gni
   if (android_64bit_target_cpu) {
@@ -80,8 +82,11 @@ config("compiler") {
 # that is Android-only. Please see that target for advice on what should go in
 # :runtime_library vs. :compiler.
 config("runtime_library") {
+  # Let the linker find libgcc.a.
+  ldflags = [ "--gcc-toolchain=" +
+              rebase_path(android_toolchain_root, root_build_dir) ]
+
   libs = []
-  ldflags = []
 
   # On 64-bit platforms, the only symbols provided by libandroid_support.a are
   # strto{d,f,l,ul}_l. These symbols are not used by our libc++, and newer NDKs
